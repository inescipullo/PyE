plot(puntos,type = "p",ylab = "frecuencias relativas",)
abline(0.5,0)
# b) Experiencia de tirar un dado equilibrado
cara_dado <- c(1,2,3,4,5,6)
lanzamientos <- c(10,100,1000,10000,100000,1000000)
frec1 <- vector(mode = "numeric", length(lanzamientos))
frec2 <- vector(mode = "numeric", length(lanzamientos))
frec3 <- vector(mode = "numeric", length(lanzamientos))
frec4 <- vector(mode = "numeric", length(lanzamientos))
frec5 <- vector(mode = "numeric", length(lanzamientos))
frec6 <- vector(mode = "numeric", length(lanzamientos))
puntos <- cbind(lanzamientos,frec1,frec2,frec3,frec4,frec5,frec6)
puntos
for (i in 1:length(lanzamientos))
puntos[i,2:7] <- table(sample(cara_dado, puntos[i,1], replace = T))
sample(cara_dado, puntos[i,1], replace = T)
puntos[i,2:7]
table(sample(cara_dado, puntos[i,1], replace = T))
for (i in 1:length(lanzamientos)) {
puntos[i,2:7] <- table(sample(cara_dado, puntos[i,1], replace = T))
}
for (i in 1:length(lanzamientos)) {
tabla = table(sample(cara_dado, puntos[i,1], replace = T))
puntos[i,2:7] <- tabla[1:6]
}
puntos
for (i in 1:length(lanzamientos))
puntos[i,2:7] <- puntos[i,2:7]/puntos[i,1]
puntos
par(mfrow=c(2,3))
for (i in 2:7) {
plot(puntos[,1],puntos[,i],xlab = "lanzamientos", ylab = "frecuencias relativas")
abline(0.1666666, 0)
}
for (i in 1:length(lanzamientos)) {
tabla = table(sample(cara_dado, puntos[i,1], replace = T))
puntos[i,2:7] <- tabla[1:6]
}
puntos
par(mfrow=c(2,3))
for (i in 2:7) {
plot(puntos[,1],puntos[,i],xlab = "lanzamientos", ylab = "frecuencias relativas")
abline(0.1666666, 0)
}
par(mfrow=c(2,3)) # para que se puedan visualizar los 6 graficos
puntos[,1]
tabla = table(sample(cara_dado, puntos[i,1], replace = T))
puntos[i,2:7] <- tabla[1:6]
# Hago todas las tiradas
for (i in 1:length(lanzamientos)) {
tabla = table(sample(cara_dado, puntos[i,1], replace = T))
puntos[i,2:7] <- tabla[1:6]
}
puntos
# Calculo las frecuencias relativas
for (i in 1:length(lanzamientos))
puntos[i,2:7] <- puntos[i,2:7]/puntos[i,1]
puntos
par(mfrow=c(2,3)) # para que se puedan visualizar los 6 graficos
# Grafico
for (i in 2:7) {
plot(puntos[,1],puntos[,i],xlab = "lanzamientos", ylab = "frecuencias relativas")
abline(0.1666666, 0)
}
# EJERCICIO 2
# distribución de la suma de los números que salen al tirar 4 dados para una muestra de tamaño 10000
cara_dado <- c(1,2,3,4,5,6)
lanzamientos = 10000
frec = vector(mode = "numeric")
frec
sample(cara_dado, frec, replace = T)
sample(cara_dado,1,4,replace = T)
sample(cara_dado,4,replace = T)
frec = vector(mode = "numeric",lanzamientos)
frec
for (i in 1:lanzamientos) {
resultdos[i] = sum(sample(cara_dado,4,replace = T)) # tiro 4 dados y calculo su suma
}
# EJERCICIO 2
# distribución de la suma de los números que salen al tirar 4 dados para una muestra de tamaño 10000
cara_dado <- c(1,2,3,4,5,6)
lanzamientos = 10000
resultados = vector(mode = "numeric",lanzamientos)
for (i in 1:lanzamientos) {
resultados[i] = sum(sample(cara_dado,4,replace = T)) # tiro 4 dados y calculo su suma
}
plot(table(resultados))
par(mfrow=c(1,1))
# EJERCICIO 2
# distribución de la suma de los números que salen al tirar 4 dados para una muestra de tamaño 10000
cara_dado <- c(1,2,3,4,5,6)
lanzamientos = 10000
resultados = vector(mode = "numeric",lanzamientos)
for (i in 1:lanzamientos) {
resultados[i] = sum(sample(cara_dado,4,replace = T)) # tiro 4 dados y calculo su suma
}
plot(table(resultados))
plot(table(resultados),type = "l",xlab = "Suma de los 4 dados",ylab = "Cantidad de veces que salió")
plot(table(resultados),type = "c",xlab = "Suma de los 4 dados",ylab = "Cantidad de veces que salió")
plot(table(resultados),xlab = "Suma de los 4 dados",ylab = "Cantidad de veces que salió")
# EJERCICIO 3
# urna con 3 bolas blancas y 5 bolas negras
# a) Se observa la extracción de una bola
urna = c(1,1,1,0,0,0,0,0)
if (sample(urna,1) == 1) {
print("Observamos una bola blanca");
} else {
print("Observamos una bola negra");
}
# EJERCICIO 3
# urna con 3 bolas blancas y 5 bolas negras
# a) Se observa la extracción de una bola
urna = c(1,1,1,0,0,0,0,0)
if (sample(urna,1) == 1) {
print("Observamos una bola blanca");
} else {
print("Observamos una bola negra");
}
# EJERCICIO 3
# urna con 3 bolas blancas y 5 bolas negras
# a) Se observa la extracción de una bola
urna = c(1,1,1,0,0,0,0,0)
if (sample(urna,1) == 1) {
print("Observamos una bola blanca");
} else {
print("Observamos una bola negra");
}
# EJERCICIO 3
# urna con 3 bolas blancas y 5 bolas negras
# a) Se observa la extracción de una bola
urna = c(1,1,1,0,0,0,0,0)
if (sample(urna,1) == 1) {
print("Observamos una bola blanca");
} else {
print("Observamos una bola negra");
}
urna
# EJERCICIO 3
# urna con 3 bolas blancas y 5 bolas negras
urna = c(0,0,0,1,1,1,1,1)
# a) Se observa la extracción de una bola
if (sample(urna,1) == 0) {
print("Observamos una bola blanca");
} else {
print("Observamos una bola negra");
}
# a) Se observa la extracción de una bola
if (sample(urna,1) == 0) {
print("Observamos una bola blanca");
} else {
print("Observamos una bola negra");
}
# a) Se observa la extracción de una bola
if (sample(urna,1) == 0) {
print("Observamos una bola blanca")
} else {
print("Observamos una bola negra")
}
# b) Se observan 8 extracciones con reposición
sample(urna,8,replace = T)
# b) Se observan 8 extracciones con reposición
factor(sample(urna,8,replace = T))
# b) Se observan 8 extracciones con reposición
factor(sample(urna,8,replace = T),levels = c("Blanco","Negro"))
# b) Se observan 8 extracciones con reposición
factor(sample(urna,8,replace = T),labels = c("Blanco","Negro"))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")),ylim = c(0,8))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")),ylim = c(0,8))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")),ylim = c(0,8))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")),ylim = c(0,8))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")),ylim = c(0,8))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")),ylim = c(0,8))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = F),labels = c("Blanco","Negro")),ylim = c(0,8))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = F),labels = c("Blanco","Negro")),ylim = c(0,8))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")),ylim = c(0,8))
# c) Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición)
# Este procedimiento se repite 10000 veces.
resultado = vector(mode = "numeric",10000)
for (i in 1:10000) {
resultado[i] = sum(sample(urna,30,replace = T))
}
resultado
plot(table(resultados))
plot(table(resultados))
# c) Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición)
# Este procedimiento se repite 10000 veces.
resultado = vector(mode = "numeric",10000)
for (i in 1:10000) {
resultado[i] = sum(sample(urna,30,replace = T))
}
plot(table(resultados))
# EJERCICIO 3
# urna con 3 bolas blancas y 5 bolas negras
urna = c(0,0,0,1,1,1,1,1)
# a) Se observa la extracción de una bola
if (sample(urna,1) == 0) {
print("Observamos una bola blanca")
} else {
print("Observamos una bola negra")
}
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")),ylim = c(0,8))
# c) Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición)
# Este procedimiento se repite 10000 veces.
resultado = vector(mode = "numeric",10000)
for (i in 1:10000) {
resultado[i] = sum(sample(urna,30,replace = T))
}
plot(table(resultados))
# EJERCICIO 2
# distribución de la suma de los números que salen al tirar 4 dados para una muestra de tamaño 10000
cara_dado <- c(1,2,3,4,5,6)
lanzamientos = 10000
resultados = vector(mode = "numeric",lanzamientos)
for (i in 1:lanzamientos) {
resultados[i] = sum(sample(cara_dado,4,replace = T)) # tiro 4 dados y calculo su suma
}
plot(table(resultados),xlab = "Suma de los 4 dados",ylab = "Cantidad de veces que salió")
# c) Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición)
# Este procedimiento se repite 10000 veces.
resultado = vector(mode = "numeric",10000)
for (i in 1:10000) {
resultado[i] = sum(sample(urna,30,replace = T))
}
plot(table(resultados))
# c) Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición)
# Este procedimiento se repite 10000 veces.
resultado = vector(mode = "numeric",10000)
for (i in 1:10000) {
resultado[i] = sum(sample(urna,30,replace = T))
}
plot(table(resultados))
plot(table(resultados))
resultado[i] = sum(sample(urna,30,replace = T))
for (i in 1:10000) {
resultado[i] = sum(sample(urna,30,replace = T))
}
plot(table(resultados))
# c) Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición)
# Este procedimiento se repite 10000 veces.
resultado = vector(mode = "numeric",10000)
for (i in 1:10000) {
resultado[i] = sum(sample(urna,30,replace = T))
}
plot(table(resultados))
resultados = vector(mode = "numeric",lanzamientos)
for (i in 1:lanzamientos) {
resultados[i] = sum(sample(cara_dado,4,replace = T)) # tiro 4 dados y calculo su suma
}
plot(table(resultados),xlab = "Suma de los 4 dados",ylab = "Cantidad de veces que salió")
# c) Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición)
# Este procedimiento se repite 10000 veces.
resultado = vector(mode = "numeric",10000)
for (i in 1:10000) {
resultado[i] = sum(sample(urna,30,replace = T))
}
plot(table(resultados))
plot(table(resultado))
# c) Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición)
# Este procedimiento se repite 10000 veces.
resultado = vector(mode = "numeric",10000)
for (i in 1:10000) {
resultado[i] = sum(sample(urna,30,replace = T))
}
plot(table(resultado))
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")),ylim = c(0,8),main = "Se observan 8 extracciones con reposición.")
# b) Se observan 8 extracciones con reposición
plot(factor(sample(urna,8,replace = T),labels = c("Blanco","Negro")),xlab = "Color",ylab = "Cantidad de bolas",ylim = c(0,8),main = "Se observan 8 extracciones con reposición.")
plot(table(resultado),xlab = "Cantidad de bolas negras observadas",ylab = "",main = "Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición). \nEste procedimiento se repite 10000 veces.")
plot(table(resultado),xlab = "Cantidad de bolas negras observadas",ylab = "Cantidad de veces que ocurrió",main = "Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición). \nEste procedimiento se repite 10000 veces.")
plot(table(resultado),xlab = "Cantidad de bolas negras observadas",ylab = "Cantidad de veces que ocurrió",main = "Se observa la cantidad de bolas negras que salen al\n extraer 30 bolas (con reposición). \nEste procedimiento se repite 10000 veces.")
plot(table(resultado),xlab = "Cantidad de bolas negras observadas",ylab = "Cantidad de veces que ocurrió",main = "Se observa la cantidad de bolas negras que salen al extraer 30 bolas \n(con reposición). Este procedimiento se repite 10000 veces.")
plot(table(resultado),xlab = "Cantidad de bolas negras observadas",ylab = "Cantidad de veces que ocurrió",main = "Se observa la cantidad de bolas negras que salen al extraer 30 \nbolas (con reposición). Este procedimiento se repite 10000 veces.")
plot(table(resultado),xlab = "Cantidad de bolas negras observadas",ylab = "Cantidad de veces que ocurrió",main = "Se observa la cantidad de bolas negras que salen al extraer\n 30 bolas (con reposición). Esto se repite 10000 veces.")
# c) Se observa la cantidad de bolas negras que salen al extraer 30 bolas (con reposición)
# Este procedimiento se repite 10000 veces.
resultado = vector(mode = "numeric",10000)
for (i in 1:10000) {
resultado[i] = sum(sample(urna,30,replace = T))
}
plot(table(resultado),xlab = "Cantidad de bolas negras observadas",ylab = "Cantidad de veces que ocurrió",main = "Se observa la cantidad de bolas negras que salen al extraer\n 30 bolas (con reposición). Esto se repite 10000 veces.")
# tabla de frecuencias para EDAD
# garfico histograma
breaks_edad = seq(18,68,5)
edad_intervalos = cut(data$edad_usuario, breaks = breaks_edad, right = FALSE)
frec_abs_edad = table(edad_intervalos)
frec_rel_edad = round(frec_abs_edad / sum(frec_abs_edad),4)
frec_abs_ac_edad = cumsum(frec_abs_edad)
frec_rel_ac_edad = cumsum(frec_rel_edad)
tabla_edad = cbind(frec_abs_edad, frec_rel_edad, frec_abs_ac_edad,frec_rel_ac_edad)
attributes(tabla_edad)$dimnames[[2]] = c("Frecuencia Absoluta", "Frecuencia Relativa", "Frecuencia Absoluta Acumulada", "Frecuencia Relativa Acumulada")
#NA_ = c(1,1/100,sum(frec_abs_edad)+1,sum(frec_rel_edad)+1/100)
total = c(sum(frec_abs_edad),sum(frec_rel_edad),NA,NA)
tabla_edad = rbind(tabla_edad,total)
tabla_edad
setwd("/Users/inescipullo/Documents2.0/Probabilidad\ y\ Estadistica/PyE")
data = read.table("usuarios9.csv", header = TRUE, sep = ",")
data2 = read.table("recorridos9.csv", header = TRUE, sep = ",")
attach(data)
attach(data2)
# tabla de frecuencias para EDAD
# grafico histograma
breaks_edad = seq(18,68,5)
edad_intervalos = cut(data$edad_usuario, breaks = breaks_edad, right = FALSE)
frec_abs_edad = table(edad_intervalos)
frec_rel_edad = round(frec_abs_edad / sum(frec_abs_edad),4)
frec_abs_ac_edad = cumsum(frec_abs_edad)
frec_rel_ac_edad = cumsum(frec_rel_edad)
tabla_edad = cbind(frec_abs_edad, frec_rel_edad, frec_abs_ac_edad,frec_rel_ac_edad)
attributes(tabla_edad)$dimnames[[2]] = c("Frecuencia Absoluta", "Frecuencia Relativa", "Frecuencia Absoluta Acumulada", "Frecuencia Relativa Acumulada")
setwd("/Users/inescipullo/Documents2.0/Probabilidad\ y\ Estadistica/PyE")
data = read.table("usuarios9.csv", header = TRUE, sep = ",")
data2 = read.table("recorridos9.csv", header = TRUE, sep = ",")
setwd("/Users/inescipullo/Documents2.0/Probabilidad\ y\ Estadistica/PyE/TP1")
data = read.table("usuarios9.csv", header = TRUE, sep = ",")
data2 = read.table("recorridos9.csv", header = TRUE, sep = ",")
attach(data)
attach(data2)
# tabla de frecuencias para EDAD
# grafico histograma
breaks_edad = seq(18,68,5)
edad_intervalos = cut(data$edad_usuario, breaks = breaks_edad, right = FALSE)
frec_abs_edad = table(edad_intervalos)
frec_rel_edad = round(frec_abs_edad / sum(frec_abs_edad),4)
frec_abs_ac_edad = cumsum(frec_abs_edad)
frec_rel_ac_edad = cumsum(frec_rel_edad)
tabla_edad = cbind(frec_abs_edad, frec_rel_edad, frec_abs_ac_edad,frec_rel_ac_edad)
attributes(tabla_edad)$dimnames[[2]] = c("Frecuencia Absoluta", "Frecuencia Relativa", "Frecuencia Absoluta Acumulada", "Frecuencia Relativa Acumulada")
#NA_ = c(1,1/100,sum(frec_abs_edad)+1,sum(frec_rel_edad)+1/100)
total = c(sum(frec_abs_edad),sum(frec_rel_edad),NA,NA)
tabla_edad = rbind(tabla_edad,total)
tabla_edad
# grafico de histograma para EDAD
title2 = "Edad de los Usuarios del Servicio EcoBici de CABA"
hist(data$edad_usuario,border = "black",col = "lightblue",xlim = c(10,70),ylim = c(0,30),breaks = breaks_edad,xlab = "Edad (en años)",ylab = "Cantidad de Usuarios",main = title2,)
axis(side = 1, at = breaks_edad)
# grafico de histograma para EDAD
title2 = "Edad de los Usuarios del Servicio EcoBici de CABA"
hist(data$edad_usuario,border = "black",col = "lightblue",ylim = c(0,30),breaks = breaks_edad,xlab = "Edad (en años)",ylab = "Cantidad de Usuarios",main = title2,)
axis(side = 1, at = breaks_edad)
# poligono de frecuencia y poligono acumulativo para EDAD
breaks_edad2 = seq(13,73,5)
hist(data$edad_usuario,border = "black",col = "lightblue"xlim = NULL,ylim = c(0,30),breaks = breaks_edad,xlab = "Edad (en años)",ylab = "Cantidad de Usuarios",main = title2,)
hist(data$edad_usuario,border = "black",col = "lightblue",xlim = NULL,ylim = c(0,30),breaks = breaks_edad,xlab = "Edad (en años)",ylab = "Cantidad de Usuarios",main = title2,)
hist(data$edad_usuario,border = "black",col = "lightblue", axes = FALSE,breaks = breaks_edad,xlab = "Edad (en años)",ylab = "Cantidad de Usuarios",main = title2,)
axis(side = 1, at = breaks_edad)
axis(side = 2, at = c(0,30))
axis(side = 2, at = c(0,5,10,15,20,25,30))
hist(data$edad_usuario,border = "black",col = "lightblue", xaxt='n',ylim = c(0,30),breaks = breaks_edad,xlab = "Edad (en años)",ylab = "Cantidad de Usuarios",main = title2,)
axis(side = 1, at = breaks_edad)
# poligono de frecuencia y poligono acumulativo para EDAD
breaks_edad2 = seq(13,73,5)
xy = table(cut(data$edad_usuario,breaks = breaks_edad2,right = FALSE))
xy = round(xy/sum(xy),4)
# poligono de frecuencia:
plot(xy,type = "l",main = title2,ylab = "Frecuencia Relativa",xlab = "Edad (en años)",ylim = c(0,0.3))
grid()
# grafico para DISTANCIA
# probamos un histograma
hist(data2$distancia/1000,border = "black",col = "yellow",xlim = c(0,12),breaks = breaks,xlab = "Distancia (en kilómetros)",ylab = "Cantidad de recorridos",main = "Distancias de recorridos en EcoBici en CABA")
# tabla de frecuencias para DISTANCIA
# divido por 1000 y pasan a ser kilometros
breaks = seq(0,11000,1000)/1000
distancia_intervalos = cut(data2$distancia/1000, breaks = breaks,right = FALSE)
frec_abs_distancia = table(distancia_intervalos)
frec_rel_distancia = round(frec_abs_distancia / sum(frec_abs_distancia),4)
frec_abs_ac_distancia = cumsum(frec_abs_distancia)
frec_rel_ac_distancia = round(frec_abs_ac_distancia / sum(frec_abs_distancia),4)
tabla_distancia = cbind(frec_abs_distancia, frec_rel_distancia, frec_abs_ac_distancia,frec_rel_ac_distancia)
attributes(tabla_distancia)$dimnames[[2]] = c("Frecuencia Absoluta", "Frecuencia Relativa", "Frecuencia Absoluta Acumulada", "Frecuencia Relativa Acumulada")
TOTAL = c(sum(frec_abs_distancia),sum(frec_rel_distancia),NA,NA)
tabla_distancia = rbind(tabla_distancia,TOTAL)
tabla_distancia
# grafico para DISTANCIA
# probamos un histograma
hist(data2$distancia/1000,border = "black",col = "yellow",xlim = c(0,12),breaks = breaks,xlab = "Distancia (en kilómetros)",ylab = "Cantidad de recorridos",main = "Distancias de recorridos en EcoBici en CABA")
# probamos un grafico de caja
boxplot(data2$distancia/1000, col="yellow", main = "Distancias de recorridos en EcoBici en CABA" , ylab="Distancia del recorrido (en kilómetros)")
# tabla de frecuencias para DURACION DEL RECORRIDO
#se podria dividir un 60 y queda en minutos (?)
#breaks = round(seq(130,29130,1000)/60,2)
breaks = c(2,12,22,32,42,52,62,72,82,92,102,112,122,132,485)
duracion_intervalos = cut(data2$duracion_recorrido/60, breaks = breaks, rigth = FALSE)
frec_abs_duracion = table(duracion_intervalos)
frec_rel_duracion = round(frec_abs_duracion / sum(frec_abs_duracion),4)
frec_abs_ac_duracion = cumsum(frec_abs_duracion)
frec_rel_ac_duracion = round(frec_abs_ac_duracion / sum(frec_abs_duracion),4)
tabla_duracion = cbind(frec_abs_duracion, frec_rel_duracion, frec_abs_ac_duracion,frec_rel_ac_duracion)
attributes(tabla_duracion)$dimnames[[2]] = c("Frecuencia Absoluta", "Frecuencia Relativa", "Frecuencia Absoluta Acumulada", "Frecuencia Relativa Acumulada")
TOTAL = c(sum(frec_abs_duracion),frec_rel_ac_duracion[[14]],NA,NA)
tabla_duracion = rbind(tabla_duracion,TOTAL)
tabla_duracion
# grafico de caja para DURACION
title3 = "Duraciones de recorridos en EcoBici en CABA"
boxplot(dur_recorridos, col="orange", main = title3 , ylab="Duración del recorrido (en minutos)")
breaks_hist = c(2,12,22,32,42,52,62,72,82,92,102,112,122,132)
hist(dur_recorridos,border = "black",col = "orange",ylim = c(0,120),xlim = c(0,140),breaks = breaks_hist,xlab = "Duración (en minutos)",ylab = "Cantidad de recorridos",main = "Duración de recorridos en EcoBici en CABA")
hist(dur_recorridos,border = "black",col = "orange",ylim = c(0,120),xlim = c(0,140),breaks = breaks_hist,xlab = "Duración (en minutos)",ylab = "Cantidad de recorridos",main = "Duración de recorridos en EcoBici en CABA")
#lista de duraciones de reorridos sin los 3 outliers mas extremos
# estos uotliers son:
outliers = c(484.550000,267.650000,191.300000)
dur_recorridos =  c(33.633333,  30.483333,7.283333,44.916667,16.533333,9.050000,19.916667,36.750000,36.116667
,10.566667,25.500000,12.400000,21.600000,28.200000,28.966667,24.683333,28.816667,30.466667
,11.666667,10.866667,25.733333,25.583333,19.133333,49.400000,47.216667,40.900000,8.150000
,19.700000,18.716667,18.533333,26.866667,45.866667,13.716667,20.316667,19.566667,14.616667
,14.850000,30.000000,37.250000,23.650000,25.933333,10.650000,22.966667,30.033333,9.850000
,16.600000,18.183333,15.583333,22.583333,23.450000,20.783333,37.166667,26.016667,50.216667
,8.383333,12.216667,14.866667,10.916667,20.616667,25.733333,16.416667,28.066667,33.283333
,60.750000,27.766667,15.783333,86.966667,28.833333,22.616667,32.700000,34.216667,4.233333
,40.633333,16.516667,10.100000,7.933333,8.216667,7.883333,8.833333,29.416667,40.316667
,13.500000,8.133333,9.100000,9.983333,17.150000,23.566667,23.016667,8.400000,29.483333
,40.400000,6.400000,6.050000,5.483333,5.733333,6.300000,5.183333,5.650000,7.133333
,5.966667,5.950000,5.166667,7.266667,57.100000,18.966667,25.683333,53.383333,40.450000
,23.333333,15.650000,23.500000,24.466667,19.166667,24.316667,28.450000,19.250000,16.366667
,19.433333,19.483333,9.850000,10.050000,10.216667,15.500000,24.966667,9.766667,19.033333
,57.400000,9.950000,40.166667,22.416667,14.600000,38.416667,11.366667,48.416667,12.350000
,28.633333,6.566667,29.883333,19.766667,21.266667,41.666667,34.316667,38.933333,22.550000
,32.533333,49.750000,12.966667,19.383333,16.516667,25.683333,24.200000,8.233333,23.166667
,31.900000,29.666667,19.083333,40.400000,22.650000,35.066667,14.766667,34.883333,4.300000
,4.683333,4.833333,4.316667,3.566667,2.200000,5.133333,11.116667,130.966667,19.783333
,17.583333,24.183333,17.400000,10.750000,123.600000,39.166667,89.583333,19.666667,14.866667
,21.250000,20.500000,21.950000,81.083333,11.500000,22.766667,7.916667,25.066667,31.833333
,31.383333,8.300000,25.133333,36.100000,21.383333,13.183333,19.416667,11.533333,10.983333
,20.983333,14.983333,31.850000,23.916667,17.316667,19.750000,26.400000,20.500000,55.283333
,27.100000,33.433333,10.200000,55.333333,9.983333,18.500000,23.400000,31.916667,60.133333
,27.250000,31.766667,13.733333,29.316667,9.033333,73.100000,16.000000,41.766667,34.083333
,23.750000,29.266667,41.100000,31.800000,56.950000,13.383333,29.300000,37.183333,11.666667
,22.516667,9.400000,10.733333,18.933333,8.016667,30.550000,18.816667,19.966667,20.883333
,31.000000,30.766667,19.333333,24.966667,20.450000,27.350000,33.233333,43.866667
,102.616667,42.216667,32.283333,16.316667,9.066667,35.150000,7.816667,8.883333
,11.400000,21.983333,104.483333,29.533333,9.116667,26.816667,28.933333,9.400000,23.566667
,17.850000,9.450000,67.233333,15.966667,12.833333,61.933333,27.650000,11.900000,27.500000
,24.350000,24.116667,25.833333,25.733333,6.866667,10.866667,16.233333,18.100000,9.333333
,7.900000,8.100000,7.700000,9.366667,24.200000,63.650000,23.916667,27.400000,22.533333
,51.950000,24.716667,40.450000,34.283333,47.200000,28.250000,33.083333,35.950000,26.666667
,9.400000,45.366667,26.800000,18.416667,22.433333,24.433333,14.016667,19.100000
,30.366667,24.716667,34.466667,100.966667,34.416667,52.600000,65.116667,13.250000,34.633333
,30.466667,33.600000,22.950000,53.683333,50.733333,20.950000,17.400000,58.533333,12.183333
,87.733333,24.983333,17.783333,12.250000,6.083333,3.550000,16.183333,47.133333,18.866667
,35.283333,5.233333,34.166667,26.933333,6.566667,6.516667,6.650000,6.350000,7.283333
,7.766667,7.300000,8.650000,18.200000,11.000000,7.533333,7.716667,9.050000,9.566667
,9.666667,6.633333,10.550000,9.650000,25.683333,7.166667,42.883333,18.216667,48.500000
,19.483333,31.366667,34.833333,12.033333,17.016667,15.750000,36.316667,80.183333,6.733333
,8.550000,15.633333,30.150000,62.116667,42.116667,10.850000,112.883333,27.316667,19.133333
,24.933333,29.700000,26.183333,3.850000,10.766667,27.983333,31.800000,32.200000,32.783333
,39.183333,38.916667,31.516667,36.300000,32.700000,32.516667,16.666667,17.150000,9.000000
,9.000000,15.483333,19.616667,40.500000,35.150000,37.316667)
dias = c("Domingo","Domingo","Miércoles","Domingo","Martes","Miércoles","Miércoles","Martes","Martes","Domingo"
,"Viernes","Domingo","Jueves","Sábado","Miércoles","Domingo","Lunes", "Sábado","Domingo","Sábado",
"Viernes","Sábado","Sábado","Jueves","Lunes", "Sábado","Lunes", "Martes","Jueves","Sábado",
"Jueves","Domingo","Jueves","Domingo","Jueves","Jueves","Martes","Domingo","Lunes", "Lunes",
"Viernes","Lunes", "Lunes", "Domingo","Domingo","Jueves","Sábado","Sábado","Domingo","Sábado",
"Domingo","Lunes", "Miércoles","Martes","Domingo","Viernes","Lunes", "Domingo","Miércoles","Sábado",
"Domingo","Lunes", "Miércoles","Sábado","Domingo","Domingo","Lunes", "Sábado","Sábado","Domingo"
,"Lunes", "Lunes", "Jueves","Domingo","Miércoles","Jueves","Martes","Lunes", "Jueves","Miércoles"
,"Miércoles","Martes","Lunes", "Martes","Jueves","Domingo","Domingo","Martes","Sábado","Domingo"
, "Miércoles","Miércoles", "Miércoles", "Jueves","Martes","Viernes","Miércoles", "Sábado","Miércoles", "Viernes"
,"Martes","Martes","Sábado","Sábado","Martes","Lunes", "Sábado","Domingo","Jueves","Jueves",
"Lunes", "Lunes", "Domingo","Jueves","Martes","Sábado","Viernes","Viernes","Jueves","Viernes"
, "Martes","Viernes","Martes","Miércoles", "Martes","Sábado","Jueves","Miércoles", "Lunes", "Sábado",
"Viernes","Sábado","Viernes","Lunes", "Lunes", "Miércoles", "Viernes","Jueves","Miércoles", "Jueves",
"Domingo","Sábado","Jueves","Viernes","Miércoles", "Domingo","Jueves","Martes","Viernes","Domingo"
, "Sábado","Lunes", "Viernes","Miércoles", "Martes","Sábado","Sábado","Lunes", "Sábado","Domingo"
,"Sábado","Lunes", "Martes","Viernes","Jueves","Martes","Lunes", "Viernes","Martes","Martes",
"Jueves","Lunes", "Lunes", "Viernes","Miércoles", "Lunes", "Martes","Sábado","Jueves","Martes",
"Lunes", "Martes","Sábado","Lunes", "Viernes","Lunes", "Viernes","Miércoles", "Domingo","Viernes"
,"Domingo","Domingo","Domingo","Martes","Lunes", "Miércoles", "Miércoles", "Sábado","Miércoles", "Miércoles"
,"Sábado","Jueves","Miércoles", "Jueves","Sábado","Miércoles", "Miércoles", "Jueves","Martes","Jueves",
"Domingo","Jueves","Sábado","Martes","Sábado","Jueves","Viernes","Viernes","Viernes","Sábado",
"Lunes", "Martes","Miércoles", "Viernes","Sábado","Sábado","Lunes", "Domingo","Sábado","Martes",
"Viernes","Domingo","Jueves","Miércoles", "Lunes", "Viernes","Viernes","Domingo","Jueves","Sábado",
"Viernes","Lunes", "Viernes","Lunes", "Domingo","Viernes","Sábado","Jueves","Jueves",
"Domingo","Martes","Domingo","Martes","Lunes", "Miércoles", "Sábado","Viernes","Miércoles"
, "Martes","Martes","Jueves","Lunes", "Sábado","Viernes","Miércoles", "Sábado","Lunes", "Martes",
"Viernes","Viernes","Lunes", "Sábado","Viernes","Domingo","Miércoles", "Martes","Lunes", "Domingo"
, "Miércoles", "Domingo","Martes","Martes","Jueves","Viernes","Sábado","Jueves","Jueves","Miércoles"
, "Viernes","Jueves","Domingo","Sábado","Viernes","Miércoles", "Domingo","Jueves","Viernes","Lunes",
"Viernes","Martes","Martes","Sábado","Domingo","Domingo","Miércoles", "Lunes", "Domingo"
, "Jueves","Lunes", "Lunes", "Jueves","Domingo","Viernes","Viernes","Domingo","Sábado","Sábado",
"Lunes", "Miércoles", "Jueves","Domingo","Lunes", "Lunes", "Domingo","Miércoles", "Lunes", "Viernes"
, "Lunes", "Lunes", "Viernes","Lunes", "Sábado","Domingo","Domingo","Martes","Sábado","Jueves",
"Domingo","Domingo","Sábado","Sábado","Sábado","Viernes","Viernes","Martes","Lunes", "Jueves",
"Martes","Jueves","Miércoles", "Jueves","Lunes", "Miércoles", "Domingo","Jueves","Miércoles", "Martes",
"Lunes", "Jueves","Domingo","Viernes","Jueves","Jueves","Sábado","Sábado","Sábado","Jueves",
"Lunes", "Sábado","Domingo","Domingo","Viernes","Martes","Miércoles", "Martes","Lunes", "Jueves",
"Martes","Viernes","Lunes", "Martes","Viernes","Miércoles", "Sábado","Jueves","Lunes", "Sábado",
"Sábado","Jueves","Jueves","Martes","Sábado","Martes","Miércoles", "Miércoles", "Lunes", "Martes",
"Lunes", "Jueves","Domingo","Martes","Lunes", "Sábado","Jueves","Viernes","Sábado","Miércoles","Sábado")
breaks_hist = c(2,12,22,32,42,52,62,72,82,92,102,112,122,132)
hist(dur_recorridos,border = "black",col = "orange",ylim = c(0,120),xlim = c(0,140),breaks = breaks_hist,xlab = "Duración (en minutos)",ylab = "Cantidad de recorridos",main = "Duración de recorridos en EcoBici en CABA")
hist(dur_recorridos,border = "black",col = "orange",ylim = c(0,120),xaxt='n',breaks = breaks_hist,xlab = "Duración (en minutos)",ylab = "Cantidad de recorridos",main = "Duración de recorridos en EcoBici en CABA")
axis(side = 1, at = breaks)
# grafico de histograma para EDAD
title2 = "Edad de los Usuarios del Servicio EcoBici de CABA"
hist(data$edad_usuario,border = "black",col = "lightblue", xaxt='n',ylim = c(0,30),breaks = breaks_edad,xlab = "Edad (en años)",ylab = "Cantidad de Usuarios",main = title2,)
axis(side = 1, at = breaks_edad)
